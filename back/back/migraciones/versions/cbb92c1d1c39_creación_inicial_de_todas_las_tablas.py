"""Creación inicial de todas las tablas

Revision ID: cbb92c1d1c39
Revises: 
Create Date: 2025-07-09 00:05:02.268208

"""
from typing import Sequence, Union
import sqlmodel  # <-- ¡AÑADE ESTA LÍNEA!

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cbb92c1d1c39'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('marca',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('rol',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rol_nombre'), 'rol', ['nombre'], unique=True)
    op.create_table('tercero',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_interno', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('es_cliente', sa.Boolean(), nullable=False),
    sa.Column('es_proveedor', sa.Boolean(), nullable=False),
    sa.Column('nombre_razon_social', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('nombre_fantasia', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('identificacion_fiscal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('condicion_iva', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('localidad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('provincia', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pais', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('limite_credito', sa.Float(), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=False),
    sa.Column('fecha_alta', sa.DateTime(), nullable=False),
    sa.Column('notas', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tercero_codigo_interno'), 'tercero', ['codigo_interno'], unique=False)
    op.create_index(op.f('ix_tercero_identificacion_fiscal'), 'tercero', ['identificacion_fiscal'], unique=False)
    op.create_index(op.f('ix_tercero_nombre_razon_social'), 'tercero', ['nombre_razon_social'], unique=False)
    op.create_table('articulo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_barras', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('precio_costo', sa.Float(), nullable=False),
    sa.Column('precio_venta', sa.Float(), nullable=False),
    sa.Column('stock_actual', sa.Float(), nullable=False),
    sa.Column('stock_minimo', sa.Float(), nullable=True),
    sa.Column('activo', sa.Boolean(), nullable=False),
    sa.Column('maneja_lotes', sa.Boolean(), nullable=False),
    sa.Column('id_categoria', sa.Integer(), nullable=True),
    sa.Column('id_marca', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_categoria'], ['categoria.id'], ),
    sa.ForeignKeyConstraint(['id_marca'], ['marca.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_articulo_codigo_barras'), 'articulo', ['codigo_barras'], unique=True)
    op.create_table('usuario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre_usuario', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=False),
    sa.Column('creado_en', sa.DateTime(), nullable=False),
    sa.Column('id_rol', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_rol'], ['rol.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usuario_nombre_usuario'), 'usuario', ['nombre_usuario'], unique=True)
    op.create_table('caja_sesiones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha_apertura', sa.DateTime(), nullable=False),
    sa.Column('saldo_inicial', sa.Float(), nullable=False),
    sa.Column('fecha_cierre', sa.DateTime(), nullable=True),
    sa.Column('saldo_final_declarado', sa.Float(), nullable=True),
    sa.Column('saldo_final_calculado', sa.Float(), nullable=True),
    sa.Column('diferencia', sa.Float(), nullable=True),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_usuario_apertura', sa.Integer(), nullable=False),
    sa.Column('id_usuario_cierre', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario_apertura'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['id_usuario_cierre'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compra',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha_emision', sa.Date(), nullable=False),
    sa.Column('numero_factura_proveedor', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_proveedor', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_proveedor'], ['tercero.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compra_detalle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Float(), nullable=False),
    sa.Column('costo_unitario', sa.Float(), nullable=False),
    sa.Column('id_compra', sa.Integer(), nullable=False),
    sa.Column('id_articulo', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_articulo'], ['articulo.id'], ),
    sa.ForeignKeyConstraint(['id_compra'], ['compra.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('venta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_cliente', sa.Integer(), nullable=True),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_caja_sesion', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_caja_sesion'], ['caja_sesiones.id'], ),
    sa.ForeignKeyConstraint(['id_cliente'], ['tercero.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('caja_movimientos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('tipo', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('concepto', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('monto', sa.Float(), nullable=False),
    sa.Column('metodo_pago', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_caja_sesion', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_venta', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_caja_sesion'], ['caja_sesiones.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['id_venta'], ['venta.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('venta_detalle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Float(), nullable=False),
    sa.Column('precio_unitario', sa.Float(), nullable=False),
    sa.Column('id_venta', sa.Integer(), nullable=False),
    sa.Column('id_articulo', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_articulo'], ['articulo.id'], ),
    sa.ForeignKeyConstraint(['id_venta'], ['venta.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_movimientos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('tipo', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cantidad', sa.Float(), nullable=False),
    sa.Column('stock_anterior', sa.Float(), nullable=False),
    sa.Column('stock_nuevo', sa.Float(), nullable=False),
    sa.Column('id_articulo', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_compra_detalle', sa.Integer(), nullable=True),
    sa.Column('id_venta_detalle', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_articulo'], ['articulo.id'], ),
    sa.ForeignKeyConstraint(['id_compra_detalle'], ['compra_detalle.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['id_venta_detalle'], ['venta_detalle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stock_movimientos')
    op.drop_table('venta_detalle')
    op.drop_table('caja_movimientos')
    op.drop_table('venta')
    op.drop_table('compra_detalle')
    op.drop_table('compra')
    op.drop_table('caja_sesiones')
    op.drop_index(op.f('ix_usuario_nombre_usuario'), table_name='usuario')
    op.drop_table('usuario')
    op.drop_index(op.f('ix_articulo_codigo_barras'), table_name='articulo')
    op.drop_table('articulo')
    op.drop_index(op.f('ix_tercero_nombre_razon_social'), table_name='tercero')
    op.drop_index(op.f('ix_tercero_identificacion_fiscal'), table_name='tercero')
    op.drop_index(op.f('ix_tercero_codigo_interno'), table_name='tercero')
    op.drop_table('tercero')
    op.drop_index(op.f('ix_rol_nombre'), table_name='rol')
    op.drop_table('rol')
    op.drop_table('marca')
    op.drop_table('categoria')
    # ### end Alembic commands ###
