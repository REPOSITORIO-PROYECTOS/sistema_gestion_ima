"""Migracion inicial con modelos de mesas y consumo

Revision ID: f4797ffeaa91
Revises: 
Create Date: 2025-10-16 21:51:49.010367

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # <-- AÑADIR ESTA LÍNEA
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'f4797ffeaa91'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Solo agregar las nuevas tablas y columnas, sin eliminar las existentes
    op.create_table('mesas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero', sa.Integer(), nullable=False),
    sa.Column('capacidad', sa.Integer(), nullable=False),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=False),
    sa.Column('id_empresa', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_empresa'], ['empresas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero', 'id_empresa', name='uq_numero_empresa_mesa')
    )
    op.create_index(op.f('ix_mesas_numero'), 'mesas', ['numero'], unique=False)
    op.create_table('consumo_mesa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp_inicio', sa.DateTime(), nullable=False),
    sa.Column('timestamp_cierre', sa.DateTime(), nullable=True),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_mesa', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_empresa', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_empresa'], ['empresas.id'], ),
    sa.ForeignKeyConstraint(['id_mesa'], ['mesas.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consumo_mesa_detalle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Float(), nullable=False),
    sa.Column('precio_unitario', sa.Float(), nullable=False),
    sa.Column('descuento_aplicado', sa.Float(), nullable=False),
    sa.Column('id_consumo_mesa', sa.Integer(), nullable=False),
    sa.Column('id_articulo', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_articulo'], ['articulos.id'], ),
    sa.ForeignKeyConstraint(['id_consumo_mesa'], ['consumo_mesa.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # Agregar nuevas columnas a tablas existentes
    op.add_column('stock_movimientos', sa.Column('id_consumo_mesa_detalle', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'stock_movimientos', 'consumo_mesa_detalle', ['id_consumo_mesa_detalle'], ['id'])
    op.add_column('ventas', sa.Column('id_mesa', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'ventas', 'mesas', ['id_mesa'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Revertir solo los cambios realizados en upgrade
    op.drop_constraint(None, 'ventas', type_='foreignkey')
    op.drop_column('ventas', 'id_mesa')
    op.drop_constraint(None, 'stock_movimientos', type_='foreignkey')
    op.drop_column('stock_movimientos', 'id_consumo_mesa_detalle')
    op.drop_table('consumo_mesa_detalle')
    op.drop_table('consumo_mesa')
    op.drop_index(op.f('ix_mesas_numero'), table_name='mesas')
    op.drop_table('mesas')
    # ### end Alembic commands ###
